ARM GAS  D:\Dev\msys64\tmp\cc0MnxWg.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-sp-d16
  26              	NMI_Handler:
  27              	.LFB146:
  28              		.file 1 "Core/Src/stm32f7xx_it.c"
   1:Core/Src/stm32f7xx_it.c **** /**
   2:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   3:Core/Src/stm32f7xx_it.c ****   * @file    LwIP/LwIP_HTTP_Server_Netconn_RTOS/Src/stm32f7xx_it.c 
   4:Core/Src/stm32f7xx_it.c ****   * @author  MCD Application Team
   5:Core/Src/stm32f7xx_it.c ****   * @brief   Main Interrupt Service Routines.
   6:Core/Src/stm32f7xx_it.c ****   *          This file provides template for all exceptions handler and 
   7:Core/Src/stm32f7xx_it.c ****   *          peripherals interrupt service routine.
   8:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   9:Core/Src/stm32f7xx_it.c ****   * @attention
  10:Core/Src/stm32f7xx_it.c ****   *
  11:Core/Src/stm32f7xx_it.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  12:Core/Src/stm32f7xx_it.c ****   *
  13:Core/Src/stm32f7xx_it.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:Core/Src/stm32f7xx_it.c ****   * You may not use this file except in compliance with the License.
  15:Core/Src/stm32f7xx_it.c ****   * You may obtain a copy of the License at:
  16:Core/Src/stm32f7xx_it.c ****   *
  17:Core/Src/stm32f7xx_it.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:Core/Src/stm32f7xx_it.c ****   *
  19:Core/Src/stm32f7xx_it.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:Core/Src/stm32f7xx_it.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:Core/Src/stm32f7xx_it.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:Core/Src/stm32f7xx_it.c ****   * See the License for the specific language governing permissions and
  23:Core/Src/stm32f7xx_it.c ****   * limitations under the License.
  24:Core/Src/stm32f7xx_it.c ****   *
  25:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
  26:Core/Src/stm32f7xx_it.c ****   */
  27:Core/Src/stm32f7xx_it.c **** 
  28:Core/Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  29:Core/Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  30:Core/Src/stm32f7xx_it.c **** #include "main.h"
ARM GAS  D:\Dev\msys64\tmp\cc0MnxWg.s 			page 2


  31:Core/Src/stm32f7xx_it.c **** #include "cmsis_os.h"
  32:Core/Src/stm32f7xx_it.c **** 
  33:Core/Src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  36:Core/Src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  37:Core/Src/stm32f7xx_it.c **** extern ETH_HandleTypeDef EthHandle;
  38:Core/Src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  39:Core/Src/stm32f7xx_it.c **** /* Private functions ---------------------------------------------------------*/
  40:Core/Src/stm32f7xx_it.c **** 
  41:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  42:Core/Src/stm32f7xx_it.c **** /*            Cortex-M7 Processor Exceptions Handlers                         */
  43:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  44:Core/Src/stm32f7xx_it.c **** 
  45:Core/Src/stm32f7xx_it.c **** /**
  46:Core/Src/stm32f7xx_it.c ****   * @brief  This function handles NMI exception.
  47:Core/Src/stm32f7xx_it.c ****   * @param  None
  48:Core/Src/stm32f7xx_it.c ****   * @retval None
  49:Core/Src/stm32f7xx_it.c ****   */
  50:Core/Src/stm32f7xx_it.c **** void NMI_Handler(void)
  51:Core/Src/stm32f7xx_it.c **** {
  29              		.loc 1 51 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  52:Core/Src/stm32f7xx_it.c **** }
  34              		.loc 1 52 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE146:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv5-sp-d16
  47              	HardFault_Handler:
  48              	.LFB147:
  53:Core/Src/stm32f7xx_it.c **** 
  54:Core/Src/stm32f7xx_it.c **** /**
  55:Core/Src/stm32f7xx_it.c ****   * @brief  This function handles Hard Fault exception.
  56:Core/Src/stm32f7xx_it.c ****   * @param  None
  57:Core/Src/stm32f7xx_it.c ****   * @retval None
  58:Core/Src/stm32f7xx_it.c ****   */
  59:Core/Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  60:Core/Src/stm32f7xx_it.c **** {
  49              		.loc 1 60 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  61:Core/Src/stm32f7xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  62:Core/Src/stm32f7xx_it.c ****   while (1)
ARM GAS  D:\Dev\msys64\tmp\cc0MnxWg.s 			page 3


  56              		.loc 1 62 3 discriminator 1 view .LVU3
  63:Core/Src/stm32f7xx_it.c ****   {
  64:Core/Src/stm32f7xx_it.c ****   }
  57              		.loc 1 64 3 discriminator 1 view .LVU4
  62:Core/Src/stm32f7xx_it.c ****   {
  58              		.loc 1 62 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE147:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv5-sp-d16
  71              	MemManage_Handler:
  72              	.LFB148:
  65:Core/Src/stm32f7xx_it.c **** }
  66:Core/Src/stm32f7xx_it.c **** 
  67:Core/Src/stm32f7xx_it.c **** /**
  68:Core/Src/stm32f7xx_it.c ****   * @brief  This function handles Memory Manage exception.
  69:Core/Src/stm32f7xx_it.c ****   * @param  None
  70:Core/Src/stm32f7xx_it.c ****   * @retval None
  71:Core/Src/stm32f7xx_it.c ****   */
  72:Core/Src/stm32f7xx_it.c **** void MemManage_Handler(void)
  73:Core/Src/stm32f7xx_it.c **** {
  73              		.loc 1 73 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
  74:Core/Src/stm32f7xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  75:Core/Src/stm32f7xx_it.c ****   while (1)
  80              		.loc 1 75 3 discriminator 1 view .LVU7
  76:Core/Src/stm32f7xx_it.c ****   {
  77:Core/Src/stm32f7xx_it.c ****   }
  81              		.loc 1 77 3 discriminator 1 view .LVU8
  75:Core/Src/stm32f7xx_it.c ****   {
  82              		.loc 1 75 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE148:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv5-sp-d16
  95              	BusFault_Handler:
  96              	.LFB149:
  78:Core/Src/stm32f7xx_it.c **** }
  79:Core/Src/stm32f7xx_it.c **** 
  80:Core/Src/stm32f7xx_it.c **** /**
ARM GAS  D:\Dev\msys64\tmp\cc0MnxWg.s 			page 4


  81:Core/Src/stm32f7xx_it.c ****   * @brief  This function handles Bus Fault exception.
  82:Core/Src/stm32f7xx_it.c ****   * @param  None
  83:Core/Src/stm32f7xx_it.c ****   * @retval None
  84:Core/Src/stm32f7xx_it.c ****   */
  85:Core/Src/stm32f7xx_it.c **** void BusFault_Handler(void)
  86:Core/Src/stm32f7xx_it.c **** {
  97              		.loc 1 86 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
  87:Core/Src/stm32f7xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
  88:Core/Src/stm32f7xx_it.c ****   while (1)
 104              		.loc 1 88 3 discriminator 1 view .LVU11
  89:Core/Src/stm32f7xx_it.c ****   {
  90:Core/Src/stm32f7xx_it.c ****   }
 105              		.loc 1 90 3 discriminator 1 view .LVU12
  88:Core/Src/stm32f7xx_it.c ****   {
 106              		.loc 1 88 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE149:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv5-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB150:
  91:Core/Src/stm32f7xx_it.c **** }
  92:Core/Src/stm32f7xx_it.c **** 
  93:Core/Src/stm32f7xx_it.c **** /**
  94:Core/Src/stm32f7xx_it.c ****   * @brief  This function handles Usage Fault exception.
  95:Core/Src/stm32f7xx_it.c ****   * @param  None
  96:Core/Src/stm32f7xx_it.c ****   * @retval None
  97:Core/Src/stm32f7xx_it.c ****   */
  98:Core/Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
  99:Core/Src/stm32f7xx_it.c **** {
 121              		.loc 1 99 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 100:Core/Src/stm32f7xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 101:Core/Src/stm32f7xx_it.c ****   while (1)
 128              		.loc 1 101 3 discriminator 1 view .LVU15
 102:Core/Src/stm32f7xx_it.c ****   {
 103:Core/Src/stm32f7xx_it.c ****   }
 129              		.loc 1 103 3 discriminator 1 view .LVU16
 101:Core/Src/stm32f7xx_it.c ****   {
 130              		.loc 1 101 9 discriminator 1 view .LVU17
ARM GAS  D:\Dev\msys64\tmp\cc0MnxWg.s 			page 5


 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE150:
 135              		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	DebugMon_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv5-sp-d16
 143              	DebugMon_Handler:
 144              	.LFB151:
 104:Core/Src/stm32f7xx_it.c **** }
 105:Core/Src/stm32f7xx_it.c **** 
 106:Core/Src/stm32f7xx_it.c **** /**
 107:Core/Src/stm32f7xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 108:Core/Src/stm32f7xx_it.c ****   * @param  None
 109:Core/Src/stm32f7xx_it.c ****   * @retval None
 110:Core/Src/stm32f7xx_it.c ****   */
 111:Core/Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 112:Core/Src/stm32f7xx_it.c **** {
 145              		.loc 1 112 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 113:Core/Src/stm32f7xx_it.c **** }
 150              		.loc 1 113 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE151:
 155              		.section	.text.SysTick_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	SysTick_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv5-sp-d16
 163              	SysTick_Handler:
 164              	.LFB152:
 114:Core/Src/stm32f7xx_it.c **** 
 115:Core/Src/stm32f7xx_it.c **** /**
 116:Core/Src/stm32f7xx_it.c ****   * @brief  This function handles SysTick Handler.
 117:Core/Src/stm32f7xx_it.c ****   * @param  None
 118:Core/Src/stm32f7xx_it.c ****   * @retval None
 119:Core/Src/stm32f7xx_it.c ****   */
 120:Core/Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 121:Core/Src/stm32f7xx_it.c **** {
 165              		.loc 1 121 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 08B5     		push	{r3, lr}
 170              	.LCFI0:
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 3, -8
 173              		.cfi_offset 14, -4
ARM GAS  D:\Dev\msys64\tmp\cc0MnxWg.s 			page 6


 122:Core/Src/stm32f7xx_it.c ****   osSystickHandler();
 174              		.loc 1 122 3 view .LVU21
 175 0002 FFF7FEFF 		bl	osSystickHandler
 176              	.LVL0:
 123:Core/Src/stm32f7xx_it.c **** }
 177              		.loc 1 123 1 is_stmt 0 view .LVU22
 178 0006 08BD     		pop	{r3, pc}
 179              		.cfi_endproc
 180              	.LFE152:
 182              		.section	.text.ETH_IRQHandler,"ax",%progbits
 183              		.align	1
 184              		.global	ETH_IRQHandler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv5-sp-d16
 190              	ETH_IRQHandler:
 191              	.LFB153:
 124:Core/Src/stm32f7xx_it.c **** 
 125:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 126:Core/Src/stm32f7xx_it.c **** /*                 STM32F7xx Peripherals Interrupt Handlers                   */
 127:Core/Src/stm32f7xx_it.c **** /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
 128:Core/Src/stm32f7xx_it.c **** /*  available peripheral interrupt handler's name please refer to the startup */
 129:Core/Src/stm32f7xx_it.c **** /*  file (startup_stm32f7xx.s).                                               */
 130:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 131:Core/Src/stm32f7xx_it.c **** 
 132:Core/Src/stm32f7xx_it.c **** /**
 133:Core/Src/stm32f7xx_it.c ****   * @brief  This function handles Ethernet interrupt request.
 134:Core/Src/stm32f7xx_it.c ****   * @param  None
 135:Core/Src/stm32f7xx_it.c ****   * @retval None
 136:Core/Src/stm32f7xx_it.c ****   */
 137:Core/Src/stm32f7xx_it.c **** void ETH_IRQHandler(void)
 138:Core/Src/stm32f7xx_it.c **** {
 192              		.loc 1 138 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 08B5     		push	{r3, lr}
 197              	.LCFI1:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 139:Core/Src/stm32f7xx_it.c ****   HAL_ETH_IRQHandler(&EthHandle);
 201              		.loc 1 139 3 view .LVU24
 202 0002 0248     		ldr	r0, .L15
 203 0004 FFF7FEFF 		bl	HAL_ETH_IRQHandler
 204              	.LVL1:
 140:Core/Src/stm32f7xx_it.c **** }
 205              		.loc 1 140 1 is_stmt 0 view .LVU25
 206 0008 08BD     		pop	{r3, pc}
 207              	.L16:
 208 000a 00BF     		.align	2
 209              	.L15:
 210 000c 00000000 		.word	EthHandle
 211              		.cfi_endproc
 212              	.LFE153:
 214              		.text
ARM GAS  D:\Dev\msys64\tmp\cc0MnxWg.s 			page 7


 215              	.Letext0:
 216              		.file 2 "d:\\dev\\gcc-arm-none-eabi\\9_2019_q4-major\\arm-none-eabi\\include\\machine\\_default_ty
 217              		.file 3 "d:\\dev\\gcc-arm-none-eabi\\9_2019_q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 218              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 219              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 220              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 221              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 222              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 223              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 224              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  D:\Dev\msys64\tmp\cc0MnxWg.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_it.c
D:\Dev\msys64\tmp\cc0MnxWg.s:18     .text.NMI_Handler:00000000 $t
D:\Dev\msys64\tmp\cc0MnxWg.s:26     .text.NMI_Handler:00000000 NMI_Handler
D:\Dev\msys64\tmp\cc0MnxWg.s:40     .text.HardFault_Handler:00000000 $t
D:\Dev\msys64\tmp\cc0MnxWg.s:47     .text.HardFault_Handler:00000000 HardFault_Handler
D:\Dev\msys64\tmp\cc0MnxWg.s:64     .text.MemManage_Handler:00000000 $t
D:\Dev\msys64\tmp\cc0MnxWg.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
D:\Dev\msys64\tmp\cc0MnxWg.s:88     .text.BusFault_Handler:00000000 $t
D:\Dev\msys64\tmp\cc0MnxWg.s:95     .text.BusFault_Handler:00000000 BusFault_Handler
D:\Dev\msys64\tmp\cc0MnxWg.s:112    .text.UsageFault_Handler:00000000 $t
D:\Dev\msys64\tmp\cc0MnxWg.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
D:\Dev\msys64\tmp\cc0MnxWg.s:136    .text.DebugMon_Handler:00000000 $t
D:\Dev\msys64\tmp\cc0MnxWg.s:143    .text.DebugMon_Handler:00000000 DebugMon_Handler
D:\Dev\msys64\tmp\cc0MnxWg.s:156    .text.SysTick_Handler:00000000 $t
D:\Dev\msys64\tmp\cc0MnxWg.s:163    .text.SysTick_Handler:00000000 SysTick_Handler
D:\Dev\msys64\tmp\cc0MnxWg.s:183    .text.ETH_IRQHandler:00000000 $t
D:\Dev\msys64\tmp\cc0MnxWg.s:190    .text.ETH_IRQHandler:00000000 ETH_IRQHandler
D:\Dev\msys64\tmp\cc0MnxWg.s:210    .text.ETH_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
osSystickHandler
HAL_ETH_IRQHandler
EthHandle
