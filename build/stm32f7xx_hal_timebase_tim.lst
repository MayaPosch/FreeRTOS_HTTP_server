ARM GAS  D:\Dev\msys64\tmp\ccCUeG85.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_timebase_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_InitTick,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_InitTick
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-sp-d16
  26              	HAL_InitTick:
  27              	.LVL0:
  28              	.LFB141:
  29              		.file 1 "Core/Src/stm32f7xx_hal_timebase_tim.c"
   1:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
   2:Core/Src/stm32f7xx_hal_timebase_tim.c ****   ******************************************************************************
   3:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @file    stm32f7xx_hal_timebase_tim.c 
   4:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @author  MCD Application Team
   5:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM Template.
   6:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *    
   7:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *          This file overrides the native HAL time base functions (defined as weak)
   8:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *          the TIM time base:
   9:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *           + Intializes the TIM peripheral generate a Period elapsed Event each 1ms
  10:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *           + HAL_IncTick is called inside HAL_TIM_PeriodElapsedCallback ie each 1ms
  11:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * 
  12:Core/Src/stm32f7xx_hal_timebase_tim.c ****   ******************************************************************************
  13:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @attention
  14:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *
  15:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  16:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * All rights reserved.</center></h2>
  17:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *
  18:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  19:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * the "License"; You may not use this file except in compliance with the
  20:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * License. You may obtain a copy of the License at:
  21:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *                        opensource.org/licenses/BSD-3-Clause
  22:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *
  23:Core/Src/stm32f7xx_hal_timebase_tim.c ****   ******************************************************************************
  24:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  25:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  26:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  27:Core/Src/stm32f7xx_hal_timebase_tim.c **** #include "stm32f7xx_hal.h"
  28:Core/Src/stm32f7xx_hal_timebase_tim.c **** /** @addtogroup STM32F7xx_HAL_Driver
  29:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @{
ARM GAS  D:\Dev\msys64\tmp\ccCUeG85.s 			page 2


  30:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  31:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  32:Core/Src/stm32f7xx_hal_timebase_tim.c **** /** @addtogroup HAL_TimeBase_TIM
  33:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @{
  34:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */ 
  35:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  36:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  40:Core/Src/stm32f7xx_hal_timebase_tim.c **** TIM_HandleTypeDef        TimHandle;
  41:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  42:Core/Src/stm32f7xx_hal_timebase_tim.c **** void TIM6_DAC_IRQHandler(void);
  43:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  44:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  45:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
  46:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM6 as a time base source. 
  47:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *         The time source is configured to have 1ms time base with a dedicated 
  48:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *         Tick interrupt priority. 
  49:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  50:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  51:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  52:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @retval HAL status
  53:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  54:Core/Src/stm32f7xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick (uint32_t TickPriority)
  55:Core/Src/stm32f7xx_hal_timebase_tim.c **** {
  30              		.loc 1 55 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 32
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 55 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 40
  42 0004 0146     		mov	r1, r0
  56:Core/Src/stm32f7xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  43              		.loc 1 56 3 is_stmt 1 view .LVU2
  57:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
  44              		.loc 1 57 3 view .LVU3
  45              	.LVL1:
  58:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0U;
  46              		.loc 1 58 3 view .LVU4
  59:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  47              		.loc 1 59 3 view .LVU5
  60:Core/Src/stm32f7xx_hal_timebase_tim.c ****   
  61:Core/Src/stm32f7xx_hal_timebase_tim.c ****     /*Configure the TIM6 IRQ priority */
  62:Core/Src/stm32f7xx_hal_timebase_tim.c ****   HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
  48              		.loc 1 62 3 view .LVU6
  49 0006 0022     		movs	r2, #0
  50 0008 3620     		movs	r0, #54
  51              	.LVL2:
  52              		.loc 1 62 3 is_stmt 0 view .LVU7
  53 000a FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  D:\Dev\msys64\tmp\ccCUeG85.s 			page 3


  54              	.LVL3:
  63:Core/Src/stm32f7xx_hal_timebase_tim.c ****   
  64:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable the TIM6 global Interrupt */
  65:Core/Src/stm32f7xx_hal_timebase_tim.c ****   HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
  55              		.loc 1 65 3 is_stmt 1 view .LVU8
  56 000e 3620     		movs	r0, #54
  57 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  58              	.LVL4:
  66:Core/Src/stm32f7xx_hal_timebase_tim.c ****   
  67:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable TIM6 clock */
  68:Core/Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_RCC_TIM6_CLK_ENABLE();
  59              		.loc 1 68 3 view .LVU9
  60              	.LBB2:
  61              		.loc 1 68 3 view .LVU10
  62              		.loc 1 68 3 view .LVU11
  63 0014 184B     		ldr	r3, .L8
  64 0016 1A6C     		ldr	r2, [r3, #64]
  65 0018 42F01002 		orr	r2, r2, #16
  66 001c 1A64     		str	r2, [r3, #64]
  67              		.loc 1 68 3 view .LVU12
  68 001e 1B6C     		ldr	r3, [r3, #64]
  69 0020 03F01003 		and	r3, r3, #16
  70 0024 0193     		str	r3, [sp, #4]
  71              		.loc 1 68 3 view .LVU13
  72 0026 019B     		ldr	r3, [sp, #4]
  73              	.LBE2:
  74              		.loc 1 68 3 view .LVU14
  69:Core/Src/stm32f7xx_hal_timebase_tim.c ****   
  70:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  71:Core/Src/stm32f7xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  75              		.loc 1 71 3 view .LVU15
  76 0028 02A9     		add	r1, sp, #8
  77 002a 03A8     		add	r0, sp, #12
  78 002c FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  79              	.LVL5:
  72:Core/Src/stm32f7xx_hal_timebase_tim.c ****   
  73:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Get APB1 prescaler */
  74:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  80              		.loc 1 74 3 view .LVU16
  81              		.loc 1 74 19 is_stmt 0 view .LVU17
  82 0030 069B     		ldr	r3, [sp, #24]
  83              	.LVL6:
  75:Core/Src/stm32f7xx_hal_timebase_tim.c ****   
  76:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Compute TIM6 clock */
  77:Core/Src/stm32f7xx_hal_timebase_tim.c ****   if (uwAPB1Prescaler == RCC_HCLK_DIV1) 
  84              		.loc 1 77 3 is_stmt 1 view .LVU18
  85              		.loc 1 77 6 is_stmt 0 view .LVU19
  86 0032 C3B9     		cbnz	r3, .L2
  78:Core/Src/stm32f7xx_hal_timebase_tim.c ****   {
  79:Core/Src/stm32f7xx_hal_timebase_tim.c ****     uwTimclock = HAL_RCC_GetPCLK1Freq();
  87              		.loc 1 79 5 is_stmt 1 view .LVU20
  88              		.loc 1 79 18 is_stmt 0 view .LVU21
  89 0034 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  90              	.LVL7:
  91              		.loc 1 79 18 view .LVU22
  92 0038 0346     		mov	r3, r0
  93              	.LVL8:
ARM GAS  D:\Dev\msys64\tmp\ccCUeG85.s 			page 4


  94              	.L3:
  80:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
  81:Core/Src/stm32f7xx_hal_timebase_tim.c ****   else
  82:Core/Src/stm32f7xx_hal_timebase_tim.c ****   {
  83:Core/Src/stm32f7xx_hal_timebase_tim.c ****     uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  84:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
  85:Core/Src/stm32f7xx_hal_timebase_tim.c ****   
  86:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  87:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  95              		.loc 1 87 3 is_stmt 1 view .LVU23
  96              		.loc 1 87 46 is_stmt 0 view .LVU24
  97 003a 1048     		ldr	r0, .L8+4
  98 003c A0FB0323 		umull	r2, r3, r0, r3
  99              	.LVL9:
 100              		.loc 1 87 46 view .LVU25
 101 0040 9B0C     		lsrs	r3, r3, #18
 102              		.loc 1 87 20 view .LVU26
 103 0042 013B     		subs	r3, r3, #1
 104              	.LVL10:
  88:Core/Src/stm32f7xx_hal_timebase_tim.c ****   
  89:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Initialize TIM6 */
  90:Core/Src/stm32f7xx_hal_timebase_tim.c ****   TimHandle.Instance = TIM6;
 105              		.loc 1 90 3 is_stmt 1 view .LVU27
 106              		.loc 1 90 22 is_stmt 0 view .LVU28
 107 0044 0E48     		ldr	r0, .L8+8
 108 0046 0F4A     		ldr	r2, .L8+12
 109 0048 0260     		str	r2, [r0]
  91:Core/Src/stm32f7xx_hal_timebase_tim.c ****   
  92:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  93:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  94:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  95:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + ClockDivision = 0
  96:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + Counter direction = Up
  97:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  98:Core/Src/stm32f7xx_hal_timebase_tim.c ****   TimHandle.Init.Period = (1000000U / 1000U) - 1U;
 110              		.loc 1 98 3 is_stmt 1 view .LVU29
 111              		.loc 1 98 25 is_stmt 0 view .LVU30
 112 004a 40F2E732 		movw	r2, #999
 113 004e C260     		str	r2, [r0, #12]
  99:Core/Src/stm32f7xx_hal_timebase_tim.c ****   TimHandle.Init.Prescaler = uwPrescalerValue;
 114              		.loc 1 99 3 is_stmt 1 view .LVU31
 115              		.loc 1 99 28 is_stmt 0 view .LVU32
 116 0050 4360     		str	r3, [r0, #4]
 100:Core/Src/stm32f7xx_hal_timebase_tim.c ****   TimHandle.Init.ClockDivision = 0;
 117              		.loc 1 100 3 is_stmt 1 view .LVU33
 118              		.loc 1 100 32 is_stmt 0 view .LVU34
 119 0052 0023     		movs	r3, #0
 120              	.LVL11:
 121              		.loc 1 100 32 view .LVU35
 122 0054 0361     		str	r3, [r0, #16]
 101:Core/Src/stm32f7xx_hal_timebase_tim.c ****   TimHandle.Init.CounterMode = TIM_COUNTERMODE_UP;
 123              		.loc 1 101 3 is_stmt 1 view .LVU36
 124              		.loc 1 101 30 is_stmt 0 view .LVU37
 125 0056 8360     		str	r3, [r0, #8]
 102:Core/Src/stm32f7xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&TimHandle) == HAL_OK)
 126              		.loc 1 102 3 is_stmt 1 view .LVU38
 127              		.loc 1 102 6 is_stmt 0 view .LVU39
ARM GAS  D:\Dev\msys64\tmp\ccCUeG85.s 			page 5


 128 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 129              	.LVL12:
 130              		.loc 1 102 5 view .LVU40
 131 005c 38B1     		cbz	r0, .L7
 103:Core/Src/stm32f7xx_hal_timebase_tim.c ****   {
 104:Core/Src/stm32f7xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
 105:Core/Src/stm32f7xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&TimHandle);
 106:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
 107:Core/Src/stm32f7xx_hal_timebase_tim.c ****   
 108:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Return function status */
 109:Core/Src/stm32f7xx_hal_timebase_tim.c ****   return HAL_ERROR;
 132              		.loc 1 109 10 view .LVU41
 133 005e 0120     		movs	r0, #1
 134              	.L4:
 110:Core/Src/stm32f7xx_hal_timebase_tim.c **** }
 135              		.loc 1 110 1 view .LVU42
 136 0060 09B0     		add	sp, sp, #36
 137              	.LCFI2:
 138              		.cfi_remember_state
 139              		.cfi_def_cfa_offset 4
 140              		@ sp needed
 141 0062 5DF804FB 		ldr	pc, [sp], #4
 142              	.LVL13:
 143              	.L2:
 144              	.LCFI3:
 145              		.cfi_restore_state
  83:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
 146              		.loc 1 83 5 is_stmt 1 view .LVU43
  83:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
 147              		.loc 1 83 20 is_stmt 0 view .LVU44
 148 0066 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 149              	.LVL14:
  83:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
 150              		.loc 1 83 16 view .LVU45
 151 006a 4300     		lsls	r3, r0, #1
 152              	.LVL15:
  83:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
 153              		.loc 1 83 16 view .LVU46
 154 006c E5E7     		b	.L3
 155              	.LVL16:
 156              	.L7:
 105:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
 157              		.loc 1 105 5 is_stmt 1 view .LVU47
 105:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
 158              		.loc 1 105 12 is_stmt 0 view .LVU48
 159 006e 0448     		ldr	r0, .L8+8
 160 0070 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 161              	.LVL17:
 162 0074 F4E7     		b	.L4
 163              	.L9:
 164 0076 00BF     		.align	2
 165              	.L8:
 166 0078 00380240 		.word	1073887232
 167 007c 83DE1B43 		.word	1125899907
 168 0080 00000000 		.word	TimHandle
 169 0084 00100040 		.word	1073745920
 170              		.cfi_endproc
ARM GAS  D:\Dev\msys64\tmp\ccCUeG85.s 			page 6


 171              	.LFE141:
 173              		.section	.text.HAL_SuspendTick,"ax",%progbits
 174              		.align	1
 175              		.global	HAL_SuspendTick
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv5-sp-d16
 181              	HAL_SuspendTick:
 182              	.LFB142:
 111:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
 112:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
 113:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
 114:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM6 update interrupt.
 115:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @param  None
 116:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @retval None
 117:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
 118:Core/Src/stm32f7xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 119:Core/Src/stm32f7xx_hal_timebase_tim.c **** {
 183              		.loc 1 119 1 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 120:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Disable TIM6 update Interrupt */
 121:Core/Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&TimHandle, TIM_IT_UPDATE);
 188              		.loc 1 121 3 view .LVU50
 189 0000 034B     		ldr	r3, .L11
 190 0002 1A68     		ldr	r2, [r3]
 191 0004 D368     		ldr	r3, [r2, #12]
 192 0006 23F00103 		bic	r3, r3, #1
 193 000a D360     		str	r3, [r2, #12]
 122:Core/Src/stm32f7xx_hal_timebase_tim.c **** }
 194              		.loc 1 122 1 is_stmt 0 view .LVU51
 195 000c 7047     		bx	lr
 196              	.L12:
 197 000e 00BF     		.align	2
 198              	.L11:
 199 0010 00000000 		.word	TimHandle
 200              		.cfi_endproc
 201              	.LFE142:
 203              		.section	.text.HAL_ResumeTick,"ax",%progbits
 204              		.align	1
 205              		.global	HAL_ResumeTick
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv5-sp-d16
 211              	HAL_ResumeTick:
 212              	.LFB143:
 123:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
 124:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
 125:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 126:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM6 update interrupt.
 127:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @param  None
 128:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @retval None
 129:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
ARM GAS  D:\Dev\msys64\tmp\ccCUeG85.s 			page 7


 130:Core/Src/stm32f7xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 131:Core/Src/stm32f7xx_hal_timebase_tim.c **** {
 213              		.loc 1 131 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 132:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable TIM6 Update interrupt */
 133:Core/Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&TimHandle, TIM_IT_UPDATE);
 218              		.loc 1 133 3 view .LVU53
 219 0000 034B     		ldr	r3, .L14
 220 0002 1A68     		ldr	r2, [r3]
 221 0004 D368     		ldr	r3, [r2, #12]
 222 0006 43F00103 		orr	r3, r3, #1
 223 000a D360     		str	r3, [r2, #12]
 134:Core/Src/stm32f7xx_hal_timebase_tim.c **** }
 224              		.loc 1 134 1 is_stmt 0 view .LVU54
 225 000c 7047     		bx	lr
 226              	.L15:
 227 000e 00BF     		.align	2
 228              	.L14:
 229 0010 00000000 		.word	TimHandle
 230              		.cfi_endproc
 231              	.LFE143:
 233              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 234              		.align	1
 235              		.global	HAL_TIM_PeriodElapsedCallback
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv5-sp-d16
 241              	HAL_TIM_PeriodElapsedCallback:
 242              	.LVL18:
 243              	.LFB144:
 135:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
 136:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
 137:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  Period elapsed callback in non blocking mode
 138:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 139:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 140:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * a global variable "uwTick" used as application time base.
 141:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @param  htim : TIM handle
 142:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @retval None
 143:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
 144:Core/Src/stm32f7xx_hal_timebase_tim.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 145:Core/Src/stm32f7xx_hal_timebase_tim.c **** {
 244              		.loc 1 145 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		.loc 1 145 1 is_stmt 0 view .LVU56
 249 0000 08B5     		push	{r3, lr}
 250              	.LCFI4:
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 3, -8
 253              		.cfi_offset 14, -4
 146:Core/Src/stm32f7xx_hal_timebase_tim.c ****   HAL_IncTick();
 254              		.loc 1 146 3 is_stmt 1 view .LVU57
ARM GAS  D:\Dev\msys64\tmp\ccCUeG85.s 			page 8


 255 0002 FFF7FEFF 		bl	HAL_IncTick
 256              	.LVL19:
 147:Core/Src/stm32f7xx_hal_timebase_tim.c **** }
 257              		.loc 1 147 1 is_stmt 0 view .LVU58
 258 0006 08BD     		pop	{r3, pc}
 259              		.cfi_endproc
 260              	.LFE144:
 262              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 263              		.align	1
 264              		.global	TIM6_DAC_IRQHandler
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu fpv5-sp-d16
 270              	TIM6_DAC_IRQHandler:
 271              	.LFB145:
 148:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
 149:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
 150:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  This function handles TIM interrupt request.
 151:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @param  None
 152:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @retval None
 153:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
 154:Core/Src/stm32f7xx_hal_timebase_tim.c **** void TIM6_DAC_IRQHandler(void)
 155:Core/Src/stm32f7xx_hal_timebase_tim.c **** {
 272              		.loc 1 155 1 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276 0000 08B5     		push	{r3, lr}
 277              	.LCFI5:
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 3, -8
 280              		.cfi_offset 14, -4
 156:Core/Src/stm32f7xx_hal_timebase_tim.c ****   HAL_TIM_IRQHandler(&TimHandle);
 281              		.loc 1 156 3 view .LVU60
 282 0002 0248     		ldr	r0, .L20
 283 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 284              	.LVL20:
 157:Core/Src/stm32f7xx_hal_timebase_tim.c **** }
 285              		.loc 1 157 1 is_stmt 0 view .LVU61
 286 0008 08BD     		pop	{r3, pc}
 287              	.L21:
 288 000a 00BF     		.align	2
 289              	.L20:
 290 000c 00000000 		.word	TimHandle
 291              		.cfi_endproc
 292              	.LFE145:
 294              		.comm	TimHandle,64,4
 295              		.text
 296              	.Letext0:
 297              		.file 2 "d:\\dev\\gcc-arm-none-eabi\\9_2019_q4-major\\arm-none-eabi\\include\\machine\\_default_ty
 298              		.file 3 "d:\\dev\\gcc-arm-none-eabi\\9_2019_q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 299              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 300              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 301              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 302              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 303              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
ARM GAS  D:\Dev\msys64\tmp\ccCUeG85.s 			page 9


 304              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 305              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 306              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 307              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  D:\Dev\msys64\tmp\ccCUeG85.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_timebase_tim.c
D:\Dev\msys64\tmp\ccCUeG85.s:18     .text.HAL_InitTick:00000000 $t
D:\Dev\msys64\tmp\ccCUeG85.s:26     .text.HAL_InitTick:00000000 HAL_InitTick
D:\Dev\msys64\tmp\ccCUeG85.s:166    .text.HAL_InitTick:00000078 $d
                            *COM*:00000040 TimHandle
D:\Dev\msys64\tmp\ccCUeG85.s:174    .text.HAL_SuspendTick:00000000 $t
D:\Dev\msys64\tmp\ccCUeG85.s:181    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
D:\Dev\msys64\tmp\ccCUeG85.s:199    .text.HAL_SuspendTick:00000010 $d
D:\Dev\msys64\tmp\ccCUeG85.s:204    .text.HAL_ResumeTick:00000000 $t
D:\Dev\msys64\tmp\ccCUeG85.s:211    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
D:\Dev\msys64\tmp\ccCUeG85.s:229    .text.HAL_ResumeTick:00000010 $d
D:\Dev\msys64\tmp\ccCUeG85.s:234    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
D:\Dev\msys64\tmp\ccCUeG85.s:241    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
D:\Dev\msys64\tmp\ccCUeG85.s:263    .text.TIM6_DAC_IRQHandler:00000000 $t
D:\Dev\msys64\tmp\ccCUeG85.s:270    .text.TIM6_DAC_IRQHandler:00000000 TIM6_DAC_IRQHandler
D:\Dev\msys64\tmp\ccCUeG85.s:290    .text.TIM6_DAC_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
HAL_IncTick
HAL_TIM_IRQHandler
